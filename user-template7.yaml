apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-user-entity-azure # Renamed for clarity
  title: Create a Backstage User Entity (Publish to Azure DevOps)
  description: Generates a User entity YAML and publishes it to a predetermined Azure DevOps repository.
spec:
  owner: group:default/backstage-admins
  type: administration

  parameters:
    - title: User Information
      # Removed targetRepoUrl from required
      required: [username, email, displayName]
      properties:
        username:
          type: string
          title: Username (metadata.name)
          description: Unique username for Backstage (e.g., 'jsmith')
          ui:autofocus: true
        email:
          type: string
          title: Email (for auth annotation)
          description: The primary email address associated with the user (e.g., for Google Auth matching)
          format: email
          ui:warnings:
            - 'Ensure this matches the email used for authentication.'
        displayName:
          type: string
          title: Display Name (spec.profile.displayName)
        memberOfString:
          type: array
          title: Member Of (Groups)
          items:
            type: string
          description: List of groups the user is a member of


  steps:
    # 1. Generate the User YAML content
    - id: template
      name: Generating User YAML
      action: fetch:template
      input:
        # Assumes user-skeleton.yaml is in the same directory (or specify full URL)
        url: ./user-skeleton.yaml
        values:
          username: ${{ parameters.username }}
          email: ${{ parameters.email }}
          displayName: ${{ parameters.displayName }}
          # Convert array to YAML list string
          memberOfString: ${{ parameters.memberOfString }}

    # 2. Publish the generated file to the PREDETERMINED Azure DevOps repository
    - id: publish # Give the publish step an ID
      name: Publish User YAML to Azure DevOps Repo
      action: publish:azure
      input:
        allowedHosts: [dev.azure.com] # From your integrations config
        # --- Hardcode your predetermined Azure DevOps Repo URL ---
        repoUrl: https://dev.azure.com/gjirafadev/DevOps/_git/backstage-test # <<< REPLACE if different
        # Define where the file goes *within* the repo
        filePath: backstage-user-group/${{ parameters.username }}.yaml # Store in a 'users' directory
        commitMessage: "feat: Add Backstage user ${{ parameters.username }}"
        # sourcePath tells publish what from the workspace to commit. '.' means the root generated by fetch:template
        sourcePath: .
        # Optional: Add Git Author info
        # gitAuthorName: ${{ user.entity.spec.profile.displayName | default('Backstage Scaffolder') }}
        # gitAuthorEmail: ${{ user.entity.spec.profile.email | default('backstage@example.com') }}

    # 3. Register the entity located *in the repository*
    - id: register
      name: Register User in Backstage Catalog
      action: catalog:register
      input:
        # Use the output from the 'publish' step
        # repoContentsUrl points to the root of the repo content at the commit
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        # catalogInfoPath is the path *relative* to the repo root where the entity file is
        catalogInfoPath: /backstage-user-group/${{ parameters.username }}.yaml # Path matches filePath in publish step

  output:
    links:
      - title: Target Azure DevOps Repository
        # Use the remote URL from the publish step output for accuracy
        url: ${{ steps.publish.output.remoteUrl }}
      - title: View Published YAML File
        # Construct the URL to view the file in Azure DevOps
        # This pattern might need slight adjustment based on your exact Azure setup/branch
        url: >
          {%- set parsed = steps.publish.output.remoteUrl | parseRepoUrl -%}
          {%- set base = "https://%s/%s/%s/_git/%s" | format(parsed.host, parsed.owner, parsed.project, parsed.repo) -%}
          {{ base }}?path=%2Fbackstage-user-group%2F${{ parameters.username }}.yaml&version=GBmain
